// Code generated by mockery v2.8.0. DO NOT EDIT.

package mocks

import (
	types "github.com/golangid/candi/codebase/factory/types"
	mock "github.com/stretchr/testify/mock"
)

// GraphQLHandler is an autogenerated mock type for the GraphQLHandler type
type GraphQLHandler struct {
	mock.Mock
}

// Mutation provides a mock function with given fields:
func (_m *GraphQLHandler) Mutation() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// Query provides a mock function with given fields:
func (_m *GraphQLHandler) Query() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// RegisterMiddleware provides a mock function with given fields: group
func (_m *GraphQLHandler) RegisterMiddleware(group *types.MiddlewareGroup) {
	_m.Called(group)
}

// Subscription provides a mock function with given fields:
func (_m *GraphQLHandler) Subscription() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}
